// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String              @unique
  password           String
  registeredAt       DateTime            @default(now())
  passwordResetToken PasswordResetToken?
  workouts           Workout[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String
  createdAt DateTime @default(now())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
}

model ExerciseType {
  id        Int        @id @default(autoincrement())
  name      String
  exercises Exercise[]
}

model Workout {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  exercises  Exercise[]
  userId     Int
  finishedAt DateTime   @default(now())
}

model Exercise {
  id             Int          @id @default(autoincrement())
  type           ExerciseType @relation(fields: [exerciseTypeId], references: [id])
  exerciseTypeId Int
  workout        Workout      @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId      Int
  sets           Set[]
}

model Set {
  id          Int      @id @default(autoincrement())
  exercise    Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  weight      Int      @default(0)
  reps        Int      @default(0)
  isCompleted Boolean  @default(false)
  exerciseId  Int
}
